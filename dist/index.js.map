{"version":3,"sources":["../src/index.js"],"names":["expressValidator","require","clc","cors","mongoose","app","server","createServer","use","json","limit","bodyLimit","dirName","process","cwd","env","NODE_ENV","undefined","indexOf","split","slice","join","Promise","global","connect","set","static","listen","PORT","port","console","log","cyan","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,IAAIA,mBAAmBC,QAAQ,mBAAR,CAAvB;AACA,IAAIC,MAAMD,QAAQ,WAAR,CAAV;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;AACA,IAAMG,WAAWH,QAAQ,UAAR,CAAjB;;AAEA,IAAII,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEAH,IAAIG,GAAJ,CAAQ,qBAAWC,IAAX,CAAgB;AACpBC,WAAO,iBAAOC;AADM,CAAhB,CAAR;;AAIAN,IAAIG,GAAJ,CAAQR,kBAAR;;AAEA,IAAIY,UAAUC,QAAQC,GAAR,EAAd;;AAEA,IAAIC,MAAMF,QAAQE,GAAR,CAAYC,QAAZ,KAAyBC,SAAzB,GAAqC,iBAAOF,GAA5C,GAAkDF,QAAQE,GAAR,CAAYC,QAAxE;AACA,QAAQD,GAAR;AACI,SAAK,MAAL;AACI,YAAIH,QAAQM,OAAR,CAAgB,MAAhB,IAA0B,CAA9B,EACIN,UAAUA,QAAQO,KAAR,CAAc,IAAd,EAAoBC,KAApB,CAA0B,CAA1B,EAA6B,CAAC,CAA9B,EAAiCC,IAAjC,CAAsC,IAAtC,CAAV;AACJ,YAAIT,QAAQM,OAAR,CAAgB,MAAhB,IAA0B,CAA9B,EACIN,UAAUA,QAAQO,KAAR,CAAc,IAAd,EAAoBC,KAApB,CAA0B,CAA1B,EAA6B,CAAC,CAA9B,EAAiCC,IAAjC,CAAsC,IAAtC,CAAV;AACJ;AACJ,SAAK,YAAL;AACIT,kBAAUA,QAAQO,KAAR,CAAc,GAAd,EAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,CAAC,CAA7B,EAAgCC,IAAhC,CAAqC,GAArC,CAAV;AACA;AATR;;AAYAjB,SAASkB,OAAT,GAAmBC,OAAOD,OAA1B;AACAlB,SAASoB,OAAT,CAAiB,2BAAjB;;AAEAnB,IAAIoB,GAAJ,CAAQ,UAAR,EAAoB,eAAKJ,IAAL,CAAUT,OAAV,EAAmB,MAAnB,CAApB;;AAEAP,IAAIG,GAAJ,CAAQ,4BAAQ,eAAKa,IAAL,CAAUT,OAAV,EAAmB,MAAnB,EAA2B,aAA3B,CAAR,CAAR;AACAP,IAAIG,GAAJ,CAAQ,kBAAQkB,MAAR,CAAed,UAAU,OAAzB,CAAR;;AAEAP,IAAIG,GAAJ,CAAQL,MAAR;AACA;;AAEAE,IAAIG,GAAJ,CAAQ,SAAR;;AAEAH,IAAIC,MAAJ,CAAWqB,MAAX,CAAkBd,QAAQE,GAAR,CAAYa,IAAZ,IAAoB,iBAAOC,IAA7C;AACAC,QAAQC,GAAR,CAAY7B,IAAI8B,IAAJ,sBAA4B3B,IAAIC,MAAJ,CAAW2B,OAAX,GAAqBJ,IAAjD,CAAZ;;kBAEexB,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport favicon from 'serve-favicon';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport api from './api';\r\nimport path from 'path';\r\nimport config from './config/config.json';\r\nlet expressValidator = require('express-validator');\r\nlet clc = require('cli-color');\r\nlet cors = require('cors');\r\nconst mongoose = require('mongoose');\r\n\r\nlet app = express();\r\napp.server = http.createServer(app);\r\n\r\napp.use(morgan('dev'));\r\n\r\napp.use(bodyParser.json({\r\n    limit: config.bodyLimit\r\n}));\r\n\r\napp.use(expressValidator());\r\n\r\nlet dirName = process.cwd();\r\n\r\nlet env = process.env.NODE_ENV === undefined ? config.env : process.env.NODE_ENV;\r\nswitch (env) {\r\n    case 'home':\r\n        if (dirName.indexOf('docs') > 0)\r\n            dirName = dirName.split('\\\\').slice(0, -1).join('\\\\');\r\n        if (dirName.indexOf('dist') > 0)\r\n            dirName = dirName.split('\\\\').slice(0, -1).join('\\\\');\r\n        break;\r\n    case 'prodaction':\r\n        dirName = dirName.split('/').slice(0, -1).join('/');\r\n        break;\r\n}\r\n\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect('mongodb://localhost/users');\r\n\r\napp.set('docsPath', path.join(dirName, 'docs'));\r\n\r\napp.use(favicon(path.join(dirName, 'docs', 'favicon.ico')));\r\napp.use(express.static(dirName + '/docs'));\r\n\r\napp.use(cors());\r\n// app.use(bodyParser.json({ type: '*/*' }));\r\n\r\napp.use('/api/v1', api);\r\n\r\napp.server.listen(process.env.PORT || config.port);\r\nconsole.log(clc.cyan(`Started on port ${app.server.address().port}`));\r\n\r\nexport default app;"]}