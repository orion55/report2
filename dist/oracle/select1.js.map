{"version":3,"sources":["../../src/oracle/select1.js"],"names":["oracledb","require","dbConfig","getConnection","user","password","connectString","err","connection","console","error","message","execute","result","doRelease","log","metaData","rows","close"],"mappings":";;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,WAAWD,QAAQ,eAAR,CAAf;;AAEA;AACAD,SAASG,aAAT,CACE;AACEC,QAAgBF,SAASE,IAD3B;AAEEC,YAAgBH,SAASG,QAF3B;AAGEC,iBAAgBJ,SAASI;AAH3B,CADF,EAME,UAASC,GAAT,EAAcC,UAAd,EACA;AACE,MAAID,GAAJ,EAAS;AACPE,YAAQC,KAAR,CAAcH,IAAII,OAAlB;AACA;AACD;AACDH,aAAWI,OAAX;AACE;AACE,4CAFJ;;AAIE;AACA,IALF;;AAOE;AACA;AACA;;AAEA;AACA,YAASL,GAAT,EAAcM,MAAd,EACA;AACE,QAAIN,GAAJ,EAAS;AACPE,cAAQC,KAAR,CAAcH,IAAII,OAAlB;AACAG,gBAAUN,UAAV;AACA;AACD;AACDC,YAAQM,GAAR,CAAYF,OAAOG,QAAnB,EANF,CAMgC;AAC9BP,YAAQM,GAAR,CAAYF,OAAOI,IAAnB,EAPF,CAOgC;AAC9BH,cAAUN,UAAV;AACD,GAtBH;AAuBD,CAnCH;;AAqCA;AACA,SAASM,SAAT,CAAmBN,UAAnB,EACA;AACEA,aAAWU,KAAX,CACE,UAASX,GAAT,EAAc;AACZ,QAAIA,GAAJ,EAAS;AACPE,cAAQC,KAAR,CAAcH,IAAII,OAAlB;AACD;AACF,GALH;AAMD","file":"select1.js","sourcesContent":["/* Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved. */\n\n/******************************************************************************\n *\n * You may not use the identified files except in compliance with the Apache\n * License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * NAME\n *   select1.js\n *\n * DESCRIPTION\n *   Executes a basic query without using a connection pool or ResultSet.\n *   Uses Oracle's sample HR schema.\n *\n *   Scripts to create the HR schema can be found at:\n *   https://github.com/oracle/db-sample-schemas\n *\n *   For a connection pool example see webapp.js\n *   For a ResultSet example see resultset2.js\n *   For a query stream example see selectstream.js\n *   For a Promise example see promises.js\n *\n *****************************************************************************/\n\nvar oracledb = require('oracledb');\nvar dbConfig = require('./dbconfig.js');\n\n// Get a non-pooled connection\noracledb.getConnection(\n  {\n    user          : dbConfig.user,\n    password      : dbConfig.password,\n    connectString : dbConfig.connectString\n  },\n  function(err, connection)\n  {\n    if (err) {\n      console.error(err.message);\n      return;\n    }\n    connection.execute(\n      // The statement to execute\n        \"select * from X$USERS t order by xu$name\",\n\n      // The \"bind value\" 180 for the \"bind variable\" :id\n      [],\n\n      // Optional execute options argument, such as the query result format\n      // or whether to get extra metadata\n      // { outFormat: oracledb.OBJECT, extendedMetaData: true },\n\n      // The callback function handles the SQL execution results\n      function(err, result)\n      {\n        if (err) {\n          console.error(err.message);\n          doRelease(connection);\n          return;\n        }\n        console.log(result.metaData); // [ { name: 'DEPARTMENT_ID' }, { name: 'DEPARTMENT_NAME' } ]\n        console.log(result.rows);     // [ [ 180, 'Construction' ] ]\n        doRelease(connection);\n      });\n  });\n\n// Note: connections should always be released when not needed\nfunction doRelease(connection)\n{\n  connection.close(\n    function(err) {\n      if (err) {\n        console.error(err.message);\n      }\n    });\n}\n"]}