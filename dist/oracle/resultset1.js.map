{"version":3,"sources":["../../src/oracle/resultset1.js"],"names":["oracledb","require","dbConfig","rowCount","getConnection","user","password","connectString","err","connection","console","error","message","execute","resultSet","result","doRelease","fetchOneRowFromRS","getRow","row","doClose","log","close"],"mappings":";;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,WAAWD,QAAQ,eAAR,CAAf;;AAEA,IAAIE,WAAW,CAAf;;AAEAH,SAASI,aAAT,CACI;AACIC,UAAMH,SAASG,IADnB;AAEIC,cAAUJ,SAASI,QAFvB;AAGIC,mBAAeL,SAASK;AAH5B,CADJ,EAMI,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACvB,QAAID,GAAJ,EAAS;AACLE,gBAAQC,KAAR,CAAcH,IAAII,OAAlB;AACA;AACH;AACDH,eAAWI,OAAX,CACI,0CADJ,EAEI,EAFJ,EAEQ;AACJ,MAACC,WAAW,IAAZ,EAHJ,EAGuB;AACnB,cAAUN,GAAV,EAAeO,MAAf,EAAuB;AACnB,YAAIP,GAAJ,EAAS;AACLE,oBAAQC,KAAR,CAAcH,IAAII,OAAlB;AACAI,sBAAUP,UAAV;AACA;AACH;AACD;AACAQ,0BAAkBR,UAAlB,EAA8BM,OAAOD,SAArC;AACH,KAZL;AAaH,CAxBL;;AA0BA,SAASG,iBAAT,CAA2BR,UAA3B,EAAuCK,SAAvC,EAAkD;AAC9CA,cAAUI,MAAV,EAAkB;AACd,cAAUV,GAAV,EAAeW,GAAf,EAAoB;AAChB,YAAIX,GAAJ,EAAS;AACLE,oBAAQC,KAAR,CAAcH,IAAII,OAAlB;AACAQ,oBAAQX,UAAR,EAAoBK,SAApB,EAFK,CAE2B;AACnC,SAHD,MAGO,IAAI,CAACK,GAAL,EAAU;AAAiB;AAC9BC,oBAAQX,UAAR,EAAoBK,SAApB,EADa,CACmB;AACnC,SAFM,MAEA;AACHX;AACAO,oBAAQW,GAAR,CAAY,8BAA8BlB,QAA1C;AACAO,oBAAQW,GAAR,CAAYF,GAAZ;AACAF,8BAAkBR,UAAlB,EAA8BK,SAA9B;AACH;AACJ,KAbL;AAcH;;AAED,SAASE,SAAT,CAAmBP,UAAnB,EAA+B;AAC3BA,eAAWa,KAAX,CACI,UAAUd,GAAV,EAAe;AACX,YAAIA,GAAJ,EAAS;AACLE,oBAAQC,KAAR,CAAcH,IAAII,OAAlB;AACH;AACJ,KALL;AAMH;;AAED,SAASQ,OAAT,CAAiBX,UAAjB,EAA6BK,SAA7B,EAAwC;AACpCA,cAAUQ,KAAV,CACI,UAAUd,GAAV,EAAe;AACX,YAAIA,GAAJ,EAAS;AACLE,oBAAQC,KAAR,CAAcH,IAAII,OAAlB;AACH;AACDI,kBAAUP,UAAV;AACH,KANL;AAOH","file":"resultset1.js","sourcesContent":["/* Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved. */\n\n/******************************************************************************\n *\n * You may not use the identified files except in compliance with the Apache\n * License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * NAME\n *   resultset1.js\n *\n * DESCRIPTION\n *   Executes a query and uses a result set to fetch rows with getRow().\n *   Uses Oracle's sample HR schema.\n *\n *****************************************************************************/\n\nvar oracledb = require('oracledb');\nvar dbConfig = require('./dbconfig.js');\n\nvar rowCount = 0;\n\noracledb.getConnection(\n    {\n        user: dbConfig.user,\n        password: dbConfig.password,\n        connectString: dbConfig.connectString\n    },\n    function (err, connection) {\n        if (err) {\n            console.error(err.message);\n            return;\n        }\n        connection.execute(\n            \"select * from X$USERS t order by xu$name\",\n            [], // no bind variables\n            {resultSet: true}, // return a result set.  Default is false\n            function (err, result) {\n                if (err) {\n                    console.error(err.message);\n                    doRelease(connection);\n                    return;\n                }\n                // console.log(result);\n                fetchOneRowFromRS(connection, result.resultSet);\n            });\n    });\n\nfunction fetchOneRowFromRS(connection, resultSet) {\n    resultSet.getRow( // get one row\n        function (err, row) {\n            if (err) {\n                console.error(err.message);\n                doClose(connection, resultSet); // always close the result set\n            } else if (!row) {                // no rows, or no more rows\n                doClose(connection, resultSet); // always close the result set\n            } else {\n                rowCount++;\n                console.log(\"fetchOneRowFromRS(): row \" + rowCount);\n                console.log(row);\n                fetchOneRowFromRS(connection, resultSet);\n            }\n        });\n}\n\nfunction doRelease(connection) {\n    connection.close(\n        function (err) {\n            if (err) {\n                console.error(err.message);\n            }\n        });\n}\n\nfunction doClose(connection, resultSet) {\n    resultSet.close(\n        function (err) {\n            if (err) {\n                console.error(err.message);\n            }\n            doRelease(connection);\n        });\n}\n"]}