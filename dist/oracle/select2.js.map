{"version":3,"sources":["../../src/oracle/select2.js"],"names":["async","require","oracledb","dbConfig","doconnect","cb","getConnection","user","password","connectString","dorelease","conn","close","err","console","error","message","doquery_array","sql","execute","result","log","rows","doquery_object","outFormat","OBJECT","waterfall"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACA,IAAIE,WAAWF,QAAQ,eAAR,CAAf;;AAEA,IAAIG,YAAY,SAAZA,SAAY,CAAUC,EAAV,EAAc;AAC1BH,aAASI,aAAT,CACI;AACIC,cAAMJ,SAASI,IADnB;AAEIC,kBAAUL,SAASK,QAFvB;AAGIC,uBAAeN,SAASM;AAH5B,KADJ,EAMIJ,EANJ;AAOH,CARD;;AAUA,IAAIK,YAAY,SAAZA,SAAY,CAAUC,IAAV,EAAgB;AAC5BA,SAAKC,KAAL,CAAW,UAAUC,GAAV,EAAe;AACtB,YAAIA,GAAJ,EACIC,QAAQC,KAAR,CAAcF,IAAIG,OAAlB;AACP,KAHD;AAIH,CALD;;AAOA;AACA,IAAIC,gBAAgB,SAAhBA,aAAgB,CAAUN,IAAV,EAAgBN,EAAhB,EAAoB;AACpC,QAAIa,MAAM,uCACN,4BADM,GAEN,iCAFM,GAGN,kCAHM,GAIN,kCAJM,GAKN,sBALM,GAMN,kBANM,GAON,gEAPM,GAQN,wBARM,GASN,gCATM,GAUN,+BAVM,GAWN,yBAXM,GAYN,sDAZM,GAaN,sDAbM,GAcN,kDAdM,GAeN,+BAfJ;AAgBAP,SAAKQ,OAAL,CACID,GADJ,EAEI,UAAUL,GAAV,EAAeO,MAAf,EAAuB;AACnB,YAAIP,GAAJ,EAAS;AACL,mBAAOR,GAAGQ,GAAH,EAAQF,IAAR,CAAP;AACH,SAFD,MAEO;AACHG,oBAAQO,GAAR,CAAY,wEAAZ;AACAP,oBAAQO,GAAR,CAAYD,OAAOE,IAAnB;AACA,mBAAOjB,GAAG,IAAH,EAASM,IAAT,CAAP;AACH;AACJ,KAVL;AAWH,CA5BD;;AA8BA;AACA,IAAIY,iBAAiB,SAAjBA,cAAiB,CAAUZ,IAAV,EAAgBN,EAAhB,EAAoB;AACrC,QAAIa,MAAM,gDACN,4BADM,GAEN,iCAFM,GAGN,kCAHM,GAIN,kCAJM,GAKN,sBALM,GAMN,kBANM,GAON,gEAPM,GAQN,wBARM,GASN,gCATM,GAUN,+BAVM,GAWN,yBAXM,GAYN,oDAZM,GAaN,oDAbM,GAcN,kDAdM,GAeN,+BAfJ;AAgBAP,SAAKQ,OAAL,CACID,GADJ,EAEI,EAFJ,EAEQ;AACJ;AACA,MAACM,WAAWtB,SAASuB,MAArB,EAJJ,EAIkC;AAC9B,cAAUZ,GAAV,EAAeO,MAAf,EAAuB;AACnB,YAAIP,GAAJ,EAAS;AACL,mBAAOR,GAAGQ,GAAH,EAAQF,IAAR,CAAP;AACH,SAFD,MAEO;AACHG,oBAAQO,GAAR,CAAY,iEAAZ;AACAP,oBAAQO,GAAR,CAAYD,OAAOE,IAAnB;AACA,mBAAOjB,GAAG,IAAH,EAASM,IAAT,CAAP;AACH;AACJ,KAbL;AAcH,CA/BD;;AAiCAX,MAAM0B,SAAN,CACI,CACItB,SADJ,EAEIa,aAFJ,CADJ,EAMI,UAAUJ,GAAV,EAAeF,IAAf,EAAqB;AACjB,QAAIE,GAAJ,EAAS;AACLC,gBAAQC,KAAR,CAAc,4BAAd,EAA4CF,GAA5C,EAAiD,KAAjD;AACH;AACD,QAAIF,IAAJ,EACID,UAAUC,IAAV;AACP,CAZL","file":"select2.js","sourcesContent":["var async = require('async');\nvar oracledb = require('oracledb');\nvar dbConfig = require('./dbconfig.js');\n\nvar doconnect = function (cb) {\n    oracledb.getConnection(\n        {\n            user: dbConfig.user,\n            password: dbConfig.password,\n            connectString: dbConfig.connectString\n        },\n        cb);\n};\n\nvar dorelease = function (conn) {\n    conn.close(function (err) {\n        if (err)\n            console.error(err.message);\n    });\n};\n\n// Default Array Output Format\nvar doquery_array = function (conn, cb) {\n    var sql = 'select t.docdate AS \"Дата ED274\", ' +\n        't.opernum AS \"Код ED273\", ' +\n        'p.docdate AS \"Дата документа\", ' +\n        'p.docnum  AS \"Номер документа\", ' +\n        'p.paysum  AS \"Сумма документа\", ' +\n        'i.ed244_answercode, ' +\n        'i.ed244_purpose ' +\n        'FROM ESIDMESSAGE t, esid273doc a, payorder p, inesidmessage i ' +\n        \"where t.doctype = 273 \" +\n        \"and t.opernum = a.esidopernum \" +\n        \"AND p.opernum = a.payopernum \" +\n        \"AND i.edtype = 'ED274' \" +\n        \"and i.eddate >= to_date('01.01.2017', 'mm.dd.yyyy') \" +\n        \"and i.eddate <= to_date('02.01.2017', 'mm.dd.yyyy') \" +\n        \"AND MOD(i.ed243_edno / 1000, 1) * 1000 = a.edno \" +\n        \"AND i.ed243_eddate = a.eddate\";\n    conn.execute(\n        sql,\n        function (err, result) {\n            if (err) {\n                return cb(err, conn);\n            } else {\n                console.log(\"----- Cities beginning with 'S' (default ARRAY output format) --------\");\n                console.log(result.rows);\n                return cb(null, conn);\n            }\n        });\n};\n\n// Optional Object Output Format\nvar doquery_object = function (conn, cb) {\n    var sql = 'select t.docdate          AS \"Дата ED274\", ' +\n        't.opernum AS \"Код ED273\", ' +\n        'p.docdate AS \"Дата документа\", ' +\n        'p.docnum  AS \"Номер документа\", ' +\n        'p.paysum  AS \"Сумма документа\", ' +\n        'i.ed244_answercode, ' +\n        'i.ed244_purpose ' +\n        'FROM ESIDMESSAGE t, esid273doc a, payorder p, inesidmessage i ' +\n        'where t.doctype = 273 ' +\n        'and t.opernum = a.esidopernum ' +\n        'AND p.opernum = a.payopernum ' +\n        \"AND i.edtype = 'ED274' \" +\n        \"and i.eddate >= to_date('01.01.17', 'dd.mm.yyyy') \" +\n        \"and i.eddate <= to_date('02.01.17', 'dd.mm.yyyy') \" +\n        'AND MOD(i.ed243_edno / 1000, 1) * 1000 = a.edno ' +\n        'AND i.ed243_eddate = a.eddate';\n    conn.execute(\n        sql,\n        {}, // A bind variable parameter is needed to disambiguate the following options parameter\n        // otherwise you will get Error: ORA-01036: illegal variable name/number\n        {outFormat: oracledb.OBJECT}, // outFormat can be OBJECT or ARRAY.  The default is ARRAY\n        function (err, result) {\n            if (err) {\n                return cb(err, conn);\n            } else {\n                console.log(\"----- Cities beginning with 'S' (OBJECT output format) --------\");\n                console.log(result.rows);\n                return cb(null, conn);\n            }\n        });\n};\n\nasync.waterfall(\n    [\n        doconnect,\n        doquery_array,\n        // doquery_object\n    ],\n    function (err, conn) {\n        if (err) {\n            console.error(\"In waterfall error cb: ==>\", err, \"<==\");\n        }\n        if (conn)\n            dorelease(conn);\n    }\n);\n"]}