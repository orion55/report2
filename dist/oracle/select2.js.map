{"version":3,"sources":["../../src/oracle/select2.js"],"names":["async","require","oracledb","dbConfig","doconnect","cb","getConnection","user","password","connectString","dorelease","conn","close","err","console","error","message","doquery_array","execute","result","log","rows","doquery_object","outFormat","OBJECT","waterfall"],"mappings":";;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACA,IAAIE,WAAWF,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAIG,YAAY,SAAZA,SAAY,CAAUC,EAAV,EAAc;AAC1BH,aAASI,aAAT,CACI;AACIC,cAAMJ,SAASI,IADnB;AAEIC,kBAAUL,SAASK,QAFvB;AAGIC,uBAAeN,SAASM;AAH5B,KADJ,EAMIJ,EANJ;AAOH,CARD;;AAUA,IAAIK,YAAY,SAAZA,SAAY,CAAUC,IAAV,EAAgB;AAC5BA,SAAKC,KAAL,CAAW,UAAUC,GAAV,EAAe;AACtB,YAAIA,GAAJ,EACIC,QAAQC,KAAR,CAAcF,IAAIG,OAAlB;AACP,KAHD;AAIH,CALD;;AAOA;AACA,IAAIC,gBAAgB,SAAhBA,aAAgB,CAAUN,IAAV,EAAgBN,EAAhB,EAAoB;AACpCM,SAAKO,OAAL,CACI,0CADJ,EAEI,UAAUL,GAAV,EAAeM,MAAf,EAAuB;AACnB,YAAIN,GAAJ,EAAS;AACL,mBAAOR,GAAGQ,GAAH,EAAQF,IAAR,CAAP;AACH,SAFD,MAEO;AACHG,oBAAQM,GAAR,CAAY,wEAAZ;AACAN,oBAAQM,GAAR,CAAYD,OAAOE,IAAnB;AACA,mBAAOhB,GAAG,IAAH,EAASM,IAAT,CAAP;AACH;AACJ,KAVL;AAWH,CAZD;;AAcA;AACA,IAAIW,iBAAiB,SAAjBA,cAAiB,CAAUX,IAAV,EAAgBN,EAAhB,EAAoB;AACrCM,SAAKO,OAAL,CACI,0CADJ,EAEI,EAFJ,EAEQ;AACJ;AACA,MAACK,WAAWrB,SAASsB,MAArB,EAJJ,EAIkC;AAC9B,cAAUX,GAAV,EAAeM,MAAf,EAAuB;AACnB,YAAIN,GAAJ,EAAS;AACL,mBAAOR,GAAGQ,GAAH,EAAQF,IAAR,CAAP;AACH,SAFD,MAEO;AACHG,oBAAQM,GAAR,CAAY,iEAAZ;AACAN,oBAAQM,GAAR,CAAYD,OAAOE,IAAnB;AACA,mBAAOhB,GAAG,IAAH,EAASM,IAAT,CAAP;AACH;AACJ,KAbL;AAcH,CAfD;;AAiBAX,MAAMyB,SAAN,CACI,CACIrB,SADJ,EAEIa,aAFJ,EAGIK,cAHJ,CADJ,EAMI,UAAUT,GAAV,EAAeF,IAAf,EAAqB;AACjB,QAAIE,GAAJ,EAAS;AACLC,gBAAQC,KAAR,CAAc,4BAAd,EAA4CF,GAA5C,EAAiD,KAAjD;AACH;AACD,QAAIF,IAAJ,EACID,UAAUC,IAAV;AACP,CAZL","file":"select2.js","sourcesContent":["/* Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved. */\n\n/******************************************************************************\n *\n * You may not use the identified files except in compliance with the Apache\n * License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * NAME\n *   select2.js\n *\n * DESCRIPTION\n *   Executes queries to show array and object output formats.\n *   Gets results directly without using a ResultSet.\n *   Uses Oracle's sample HR schema.\n *\n *   Scripts to create the HR schema can be found at:\n *   https://github.com/oracle/db-sample-schemas\n *\n *  *****************************************************************************/\n\nvar async = require('async');\nvar oracledb = require('oracledb');\nvar dbConfig = require('./dbconfig.js');\n\n// Properties are applicable to all connections and SQL executions.\n// They can also be set or overridden at the individual execute() call level\n//\n// This script sets outFormat in the execute() call but it could be set here instead:\n// oracledb.outFormat = oracledb.OBJECT;\n\nvar doconnect = function (cb) {\n    oracledb.getConnection(\n        {\n            user: dbConfig.user,\n            password: dbConfig.password,\n            connectString: dbConfig.connectString\n        },\n        cb);\n};\n\nvar dorelease = function (conn) {\n    conn.close(function (err) {\n        if (err)\n            console.error(err.message);\n    });\n};\n\n// Default Array Output Format\nvar doquery_array = function (conn, cb) {\n    conn.execute(\n        \"select * from X$USERS t order by xu$name\",\n        function (err, result) {\n            if (err) {\n                return cb(err, conn);\n            } else {\n                console.log(\"----- Cities beginning with 'S' (default ARRAY output format) --------\");\n                console.log(result.rows);\n                return cb(null, conn);\n            }\n        });\n};\n\n// Optional Object Output Format\nvar doquery_object = function (conn, cb) {\n    conn.execute(\n        \"select * from X$USERS t order by xu$name\",\n        {}, // A bind variable parameter is needed to disambiguate the following options parameter\n        // otherwise you will get Error: ORA-01036: illegal variable name/number\n        {outFormat: oracledb.OBJECT}, // outFormat can be OBJECT or ARRAY.  The default is ARRAY\n        function (err, result) {\n            if (err) {\n                return cb(err, conn);\n            } else {\n                console.log(\"----- Cities beginning with 'S' (OBJECT output format) --------\");\n                console.log(result.rows);\n                return cb(null, conn);\n            }\n        });\n};\n\nasync.waterfall(\n    [\n        doconnect,\n        doquery_array,\n        doquery_object\n    ],\n    function (err, conn) {\n        if (err) {\n            console.error(\"In waterfall error cb: ==>\", err, \"<==\");\n        }\n        if (conn)\n            dorelease(conn);\n    }\n);\n"]}