{"version":3,"sources":["../../src/oracle/promises.js"],"names":["oracledb","require","dbConfig","getConnection","user","password","connectString","then","connection","sql","execute","result","console","log","metaData","rows","close","catch","err","message","error"],"mappings":";;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,WAAWD,QAAQ,eAAR,CAAf;;AAEAD,SAASG,aAAT,CACI;AACIC,UAAMF,SAASE,IADnB;AAEIC,cAAUH,SAASG,QAFvB;AAGIC,mBAAeJ,SAASI;AAH5B,CADJ,EAMKC,IANL,CAMU,UAAUC,UAAV,EAAsB;AACxB,QAAIC,MAAM,uCACN,4BADM,GAEN,iCAFM,GAGN,kCAHM,GAIN,kCAJM,GAKN,sBALM,GAMN,kBANM,GAON,gEAPM,GAQN,wBARM,GASN,gCATM,GAUN,+BAVM,GAWN,yBAXM,GAYN,sDAZM,GAaN,sDAbM,GAcN,kDAdM,GAeN,+BAfJ;AAgBA,WAAOD,WAAWE,OAAX,CAAmBD,GAAnB,EAAwB,EAAxB,EACFF,IADE,CACG,UAAUI,MAAV,EAAkB;AACpBC,gBAAQC,GAAR,CAAYF,OAAOG,QAAnB;AACAF,gBAAQC,GAAR,CAAYF,OAAOI,IAAnB;;AAEA,eAAOP,WAAWQ,KAAX,EAAP;AACH,KANE,EAOFC,KAPE,CAOI,UAAUC,GAAV,EAAe;AAClBN,gBAAQC,GAAR,CAAYK,IAAIC,OAAhB;;AAEA,eAAOX,WAAWQ,KAAX,EAAP;AACH,KAXE,CAAP;AAYH,CAnCL,EAoCKC,KApCL,CAoCW,UAAUC,GAAV,EAAe;AAClBN,YAAQQ,KAAR,CAAcF,IAAIC,OAAlB;AACH,CAtCL","file":"promises.js","sourcesContent":["/* Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved. */\n\n/******************************************************************************\n *\n * You may not use the identified files except in compliance with the Apache\n * License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * NAME\n *   promises.js\n *\n * DESCRIPTION\n *   Executes a basic query using promises instead of the callback pattern.\n *\n *   Scripts to create the HR schema can be found at:\n *   https://github.com/oracle/db-sample-schemas\n *\n *****************************************************************************/\n\nvar oracledb = require('oracledb');\nvar dbConfig = require('./dbconfig.js');\n\noracledb.getConnection(\n    {\n        user: dbConfig.user,\n        password: dbConfig.password,\n        connectString: dbConfig.connectString\n    })\n    .then(function (connection) {\n        var sql = 'select t.docdate AS \"Дата ED274\", ' +\n            't.opernum AS \"Код ED273\", ' +\n            'p.docdate AS \"Дата документа\", ' +\n            'p.docnum  AS \"Номер документа\", ' +\n            'p.paysum  AS \"Сумма документа\", ' +\n            'i.ed244_answercode, ' +\n            'i.ed244_purpose ' +\n            'FROM ESIDMESSAGE t, esid273doc a, payorder p, inesidmessage i ' +\n            \"where t.doctype = 273 \" +\n            \"and t.opernum = a.esidopernum \" +\n            \"AND p.opernum = a.payopernum \" +\n            \"AND i.edtype = 'ED274' \" +\n            \"and i.eddate >= to_date('01.01.2017', 'mm.dd.yyyy') \" +\n            \"and i.eddate <= to_date('02.01.2017', 'mm.dd.yyyy') \" +\n            \"AND MOD(i.ed243_edno / 1000, 1) * 1000 = a.edno \" +\n            \"AND i.ed243_eddate = a.eddate\";\n        return connection.execute(sql, [])\n            .then(function (result) {\n                console.log(result.metaData);\n                console.log(result.rows);\n\n                return connection.close();\n            })\n            .catch(function (err) {\n                console.log(err.message);\n\n                return connection.close();\n            });\n    })\n    .catch(function (err) {\n        console.error(err.message);\n    });\n"]}