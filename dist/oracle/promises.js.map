{"version":3,"sources":["../../src/oracle/promises.js"],"names":["oracledb","require","dbConfig","getConnection","user","password","connectString","then","connection","sql","execute","result","console","log","metaData","rows","close","catch","err","message","error"],"mappings":";;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,WAAWD,QAAQ,eAAR,CAAf;;AAEAD,SAASG,aAAT,CACI;AACIC,UAAMF,SAASE,IADnB;AAEIC,cAAUH,SAASG,QAFvB;AAGIC,mBAAeJ,SAASI;AAH5B,CADJ,EAMKC,IANL,CAMU,UAAUC,UAAV,EAAsB;AACxB,QAAIC,MAAM,uCACN,4BADM,GAEN,iCAFM,GAGN,kCAHM,GAIN,kCAJM,GAKN,sBALM,GAMN,kBANM,GAON,gEAPM,GAQN,wBARM,GASN,gCATM,GAUN,+BAVM,GAWN,yBAXM,GAYN,sDAZM,GAaN,sDAbM,GAcN,kDAdM,GAeN,+BAfJ;AAgBA,WAAOD,WAAWE,OAAX,CAAmBD,GAAnB,EAAwB,EAAxB,EACFF,IADE,CACG,UAAUI,MAAV,EAAkB;AACpBC,gBAAQC,GAAR,CAAYF,OAAOG,QAAnB;AACAF,gBAAQC,GAAR,CAAYF,OAAOI,IAAnB;;AAEA,eAAOP,WAAWQ,KAAX,EAAP;AACH,KANE,EAOFC,KAPE,CAOI,UAAUC,GAAV,EAAe;AAClBN,gBAAQC,GAAR,CAAYK,IAAIC,OAAhB;;AAEA,eAAOX,WAAWQ,KAAX,EAAP;AACH,KAXE,CAAP;AAYH,CAnCL,EAoCKC,KApCL,CAoCW,UAAUC,GAAV,EAAe;AAClBN,YAAQQ,KAAR,CAAcF,IAAIC,OAAlB;AACH,CAtCL","file":"promises.js","sourcesContent":["/* Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved. */\r\n\r\n/******************************************************************************\r\n *\r\n * You may not use the identified files except in compliance with the Apache\r\n * License, Version 2.0 (the \"License.\")\r\n *\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0.\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\r\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n *\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * NAME\r\n *   promises.js\r\n *\r\n * DESCRIPTION\r\n *   Executes a basic query using promises instead of the callback pattern.\r\n *\r\n *   Scripts to create the HR schema can be found at:\r\n *   https://github.com/oracle/db-sample-schemas\r\n *\r\n *****************************************************************************/\r\n\r\nvar oracledb = require('oracledb');\r\nvar dbConfig = require('./dbconfig.js');\r\n\r\noracledb.getConnection(\r\n    {\r\n        user: dbConfig.user,\r\n        password: dbConfig.password,\r\n        connectString: dbConfig.connectString\r\n    })\r\n    .then(function (connection) {\r\n        var sql = 'select t.docdate AS \"Дата ED274\", ' +\r\n            't.opernum AS \"Код ED273\", ' +\r\n            'p.docdate AS \"Дата документа\", ' +\r\n            'p.docnum  AS \"Номер документа\", ' +\r\n            'p.paysum  AS \"Сумма документа\", ' +\r\n            'i.ed244_answercode, ' +\r\n            'i.ed244_purpose ' +\r\n            'FROM ESIDMESSAGE t, esid273doc a, payorder p, inesidmessage i ' +\r\n            \"where t.doctype = 273 \" +\r\n            \"and t.opernum = a.esidopernum \" +\r\n            \"AND p.opernum = a.payopernum \" +\r\n            \"AND i.edtype = 'ED274' \" +\r\n            \"and i.eddate >= to_date('01.01.2017', 'mm.dd.yyyy') \" +\r\n            \"and i.eddate <= to_date('02.01.2017', 'mm.dd.yyyy') \" +\r\n            \"AND MOD(i.ed243_edno / 1000, 1) * 1000 = a.edno \" +\r\n            \"AND i.ed243_eddate = a.eddate\";\r\n        return connection.execute(sql, [])\r\n            .then(function (result) {\r\n                console.log(result.metaData);\r\n                console.log(result.rows);\r\n\r\n                return connection.close();\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err.message);\r\n\r\n                return connection.close();\r\n            });\r\n    })\r\n    .catch(function (err) {\r\n        console.error(err.message);\r\n    });\r\n"]}