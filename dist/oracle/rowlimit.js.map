{"version":3,"sources":["../../src/oracle/rowlimit.js"],"names":["oracledb","require","dbConfig","myoffset","mymaxnumrows","getConnection","user","password","connectString","err","connection","console","error","message","sql","oracleServerVersion","execute","offset","maxnumrows","maxRows","result","log","rows","length"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,WAAWD,QAAQ,eAAR,CAAf;;AAEA,IAAIE,WAAW,CAAf,C,CAAmB;AACnB,IAAIC,eAAe,CAAnB,C,CAAuB;;AAEvBJ,SAASK,aAAT,CACI;AACIC,UAAMJ,SAASI,IADnB;AAEIC,cAAUL,SAASK,QAFvB;AAGIC,mBAAeN,SAASM;AAH5B,CADJ,EAMI,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACvB,QAAID,GAAJ,EAAS;AACLE,gBAAQC,KAAR,CAAcH,IAAII,OAAlB;AACA;AACH;;AAED;AACA,QAAIC,MAAM,0CAAV;AACA,QAAIJ,WAAWK,mBAAX,IAAkC,UAAtC,EAAkD;AAC9C;AACAD,eAAO,uDAAP;AACH,KAHD,MAGO;AACH;AACAA,cAAM,sDACA,GADA,GACMA,GADN,GACY,MADZ,GAEA,gEAFN;AAGH;;AAEDJ,eAAWM,OAAX,CACIF,GADJ,EAEI,EAACG,QAAQd,QAAT,EAAmBe,YAAYd,YAA/B,EAFJ,EAGI,EAACe,SAAS,GAAV,EAHJ,EAII,UAAUV,GAAV,EAAeW,MAAf,EAAuB;AACnB,YAAIX,GAAJ,EAAS;AACLE,oBAAQC,KAAR,CAAcH,IAAII,OAAlB;AACH,SAFD,MAEO;AACHF,oBAAQU,GAAR,CAAY,eAAeP,GAA3B;AACAH,oBAAQU,GAAR,CAAY,8BAA8BD,OAAOE,IAAP,CAAYC,MAAtD;AACAZ,oBAAQU,GAAR,CAAYD,OAAOE,IAAnB;AACH;AACJ,KAZL;AAaH,CArCL","file":"rowlimit.js","sourcesContent":["var oracledb = require('oracledb');\nvar dbConfig = require('./dbconfig.js');\n\nvar myoffset = 2;  // number of rows to skip\nvar mymaxnumrows = 6;  // number of rows to fetch\n\noracledb.getConnection(\n    {\n        user: dbConfig.user,\n        password: dbConfig.password,\n        connectString: dbConfig.connectString\n    },\n    function (err, connection) {\n        if (err) {\n            console.error(err.message);\n            return;\n        }\n\n        // var sql = \"SELECT employee_id, last_name FROM employees ORDER BY employee_id\";\n        var sql = \"select * from X$USERS t order by xu$name\";\n        if (connection.oracleServerVersion >= 1201000000) {\n            // 12c row-limiting syntax\n            sql += \" OFFSET :offset ROWS FETCH NEXT :maxnumrows ROWS ONLY\";\n        } else {\n            // Pre-12c syntax [could also customize the original query and use row_number()]\n            sql = \"SELECT * FROM (SELECT A.*, ROWNUM AS MY_RNUM FROM\"\n                + \"(\" + sql + \") A \"\n                + \"WHERE ROWNUM <= :maxnumrows + :offset) WHERE MY_RNUM > :offset\";\n        }\n\n        connection.execute(\n            sql,\n            {offset: myoffset, maxnumrows: mymaxnumrows},\n            {maxRows: 150},\n            function (err, result) {\n                if (err) {\n                    console.error(err.message);\n                } else {\n                    console.log(\"Executed: \" + sql);\n                    console.log(\"Number of rows returned: \" + result.rows.length);\n                    console.log(result.rows);\n                }\n            });\n    });\n"]}