{"version":3,"sources":["../../src/api/facets.js"],"names":["config","db","id","load","req","callback","facet","find","err","index","res","params","json","create","body","length","toString","push","read","update","key","sendStatus","delete","splice","indexOf"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AAAA,QAAEA,MAAF,QAAEA,MAAF;AAAA,QAAUC,EAAV,QAAUA,EAAV;AAAA,WAAkB,wCAAS;;AAEtC;AACAC,YAAI,OAHkC;;AAKtC;;;AAGAC,YARsC,gBAQjCC,GARiC,EAQ5BF,EAR4B,EAQxBG,QARwB,EAQd;AACpB,gBAAIC,QAAQ,iBAAOC,IAAP,CAAY;AAAA,uBAASD,MAAMJ,EAAN,KAAaA,EAAtB;AAAA,aAAZ,CAAZ;AAAA,gBACIM,MAAMF,QAAQ,IAAR,GAAe,WADzB;AAEAD,qBAASG,GAAT,EAAcF,KAAd;AACH,SAZqC;;;AActC;AACAG,aAfsC,wBAetBC,GAfsB,EAejB;AAAA,gBAAdC,MAAc,SAAdA,MAAc;;AACjBD,gBAAIE,IAAJ;AACH,SAjBqC;;;AAmBtC;AACAC,cApBsC,yBAoBvBH,GApBuB,EAoBlB;AAAA,gBAAZI,IAAY,SAAZA,IAAY;;AAChBA,iBAAKZ,EAAL,GAAU,iBAAOa,MAAP,CAAcC,QAAd,CAAuB,EAAvB,CAAV;AACA,6BAAOC,IAAP,CAAYH,IAAZ;AACAJ,gBAAIE,IAAJ,CAASE,IAAT;AACH,SAxBqC;;;AA0BtC;AACAI,YA3BsC,uBA2BxBR,GA3BwB,EA2BnB;AAAA,gBAAbJ,KAAa,SAAbA,KAAa;;AACfI,gBAAIE,IAAJ,CAASN,KAAT;AACH,SA7BqC;;;AA+BtC;AACAa,cAhCsC,yBAgChBT,GAhCgB,EAgCX;AAAA,gBAAnBJ,KAAmB,SAAnBA,KAAmB;AAAA,gBAAZQ,IAAY,SAAZA,IAAY;;AACvB,iBAAK,IAAIM,GAAT,IAAgBN,IAAhB,EAAsB;AAClB,oBAAIM,QAAQ,IAAZ,EAAkB;AACdd,0BAAMc,GAAN,IAAaN,KAAKM,GAAL,CAAb;AACH;AACJ;AACDV,gBAAIW,UAAJ,CAAe,GAAf;AACH,SAvCqC;;;AAyCtC;AACAC,cA1CsC,0BA0CtBZ,GA1CsB,EA0CjB;AAAA,gBAAbJ,KAAa,SAAbA,KAAa;;AACjB,6BAAOiB,MAAP,CAAc,iBAAOC,OAAP,CAAelB,KAAf,CAAd,EAAqC,CAArC;AACAI,gBAAIW,UAAJ,CAAe,GAAf;AACH;AA7CqC,KAAT,CAAlB;AAAA,C","file":"facets.js","sourcesContent":["import resource from 'resource-router-middleware';\nimport facets from '../models/facets';\n\nexport default ({config, db}) => resource({\n\n    /** Property name to store preloaded entity on `request`. */\n    id: 'facet',\n\n    /** For requests with an `id`, you can auto-load the entity.\n     *  Errors terminate the request, success sets `req[id] = data`.\n     */\n    load(req, id, callback) {\n        let facet = facets.find(facet => facet.id === id),\n            err = facet ? null : 'Not found';\n        callback(err, facet);\n    },\n\n    /** GET / - List all entities */\n    index({params}, res) {\n        res.json(facets);\n    },\n\n    /** POST / - Create a new entity */\n    create({body}, res) {\n        body.id = facets.length.toString(36);\n        facets.push(body);\n        res.json(body);\n    },\n\n    /** GET /:id - Return a given entity */\n    read({facet}, res) {\n        res.json(facet);\n    },\n\n    /** PUT /:id - Update a given entity */\n    update({facet, body}, res) {\n        for (let key in body) {\n            if (key !== 'id') {\n                facet[key] = body[key];\n            }\n        }\n        res.sendStatus(204);\n    },\n\n    /** DELETE /:id - Delete a given entity */\n    delete({facet}, res) {\n        facets.splice(facets.indexOf(facet), 1);\n        res.sendStatus(204);\n    }\n});\n"]}